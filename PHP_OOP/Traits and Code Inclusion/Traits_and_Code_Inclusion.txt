
===================== Traits and Code Inclusion ===============================

Traits are a mechanism for code reuse in single inheritance languages such as PHP. 
A Trait is intended to reduce some limitations of single inheritance by enabling a developer to reuse sets of methods
freely in several independent classes living in different class hierarchies. 
The semantics of the combination of Traits and classes is defined in a way which reduces complexity, and avoids the typical 
problems associated with multiple inheritance and Mixins.


A Trait is similar to a class, but only intended to group functionality in a fine-grained and consistent way.
It is not possible to instantiate a Trait on its own. It is an addition to traditional inheritance and enables horizontal composition of behavior;
that is, the application of class members without requiring inheritance


---------------------------------------------------------------------------------------------------------------------------------------------------

-> You cannot extend more than one class , multiple inheritance is not support in PHP . 
-> To resolve this isssu you can create class and use it into another class without extending it .

-> You Define your class as Traits and include multiple traits into your class . By this solve multiple inheritance issu .


Traits are declared with the trait keyword
 